<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.project.board.model.mapper.BoardMapper">
	
	<!-- resuptMaps -->
	<resultMap type="Board" id="board_rm">
		
		<!-- id 태그 : PK 역할을 하는 컬럼, 필드를 작성하는 태그 -->
		<id property="boardNo"  column="BOARD_NO"/>

		<!-- 해당 게시글 이미지 목록 조회후 필드에 저장 -->
		<collection 
			property="imageList"
			select = "selectImageList" 
			column = "BOARD_NO" 
			javaType="java.util.ArrayList"			
			ofType="BoardImg"/>
		
		<!-- 해당 게시글 댓글 목록 조회 후 필드에 저장 -->	
		<collection 
			property="commentList"
			select = "selectCommentList" 
			column = "BOARD_NO" 
			javaType="java.util.ArrayList"			
			ofType="Comment"/>
	</resultMap>
  
  <!-- 게시판 종류 조회, map으로 불러왔기때문에 key : 컬럼명 -> java에서 _표기법 미적절 => 별칭 이용해서 표기법 변경 -->
  <select id="selectBoardTypeList">
	SELECT BOARD_CODE "boardCode", BOARD_NAME "boardName"
	FROM BOARD_TYPE
	ORDER BY BOARD_CODE
  </select>
  
  <!-- 게시글 수 조회 -->
  <select id="getListCount">
	SELECT COUNT(*)
	FROM "BOARD"
	WHERE BOARD_DEL_FL = 'N'
	AND BOARD_CODE = #{boardCode}  
  </select>
  
  <!-- 특정 게시판의 지정된 페이지 목록 조회 -->
  <select id="selectBoardList">
	SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,
		(SELECT COUNT(*) 
		 FROM "COMMENT" C
		 WHERE C.BOARD_NO = B.BOARD_NO AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
		 
		
		(SELECT COUNT(*)
		 FROM "BOARD_LIKE" L
		 WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
		 
		<![CDATA[
		  
		 CASE
			 WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60 
			 THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60)  || '초 전'
			 
			 WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 
			 THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60) || '분 전'
			 
			 WHEN SYSDATE - BOARD_WRITE_DATE < 1
			 THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'
			 
			 ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
		 	
		 END BOARD_WRITE_DATE
		 
		 ]]>			
			
	FROM "BOARD" B
	JOIN MEMBER USING (MEMBER_NO)
	WHERE BOARD_DEL_FL = 'N' AND BOARD_CODE = #{boardCode}
	ORDER BY BOARD_NO DESC  
  </select>
  
	<!-- 게시글 상세 조회 -->
	<select id="selectOne" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE,
		BOARD_CONTENT, BOARD_CODE, READ_COUNT,
		MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG,

		TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
		TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS')
		BOARD_UPDATE_DATE,

		(SELECT COUNT(*)
		FROM "BOARD_LIKE"
		WHERE BOARD_NO = #{boardNo}) LIKE_COUNT,

		(SELECT IMG_PATH || IMG_RENAME
		FROM "BOARD_IMG"
		WHERE BOARD_NO = #{boardNo}
		AND IMG_ORDER = 0) THUMBNAIL,
	 
		(SELECT COUNT(*) FROM "BOARD_LIKE"
		 WHERE MEMBER_NO = #{memberNo}
		 AND BOARD_NO = #{boardNo}) LIKE_CHECK


		FROM "BOARD"
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND
		BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
	</select>
  
  <!-- 상세 조회한 게시글의 이미지 목록 조회 -->  <!-- 상단의 컬렉션 실행시 해당 SELECT 실행 -->
	<select id="selectImageList" resultType="BoardImg">
		SELECT * 
		FROM "BOARD_IMG"
		WHERE BOARD_NO = #{boardNo}
		ORDER BY IMG_ORDER
	</select>
  
  <!-- 상세 조회한 게시글의 댓글 목록 조회 -->
	<select id="selectCommentList" resultType="Comment">
		SELECT LEVEL, C.* FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			    TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
			    BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_COMMENT_NO, COMMENT_DEL_FL
			FROM "COMMENT"
			JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	
	</select>
	
	<!-- 좋아요 해제 -->
	<delete id="deleteBoardLike">
		DELETE FROM "BOARD_LIKE" 
		WHERE MEMBER_NO = #{memberNo}
		AND BOARD_NO = #{boardNo}
	</delete>
	
	<!-- 좋아요 체크 -->
	<insert id="insertBoardLike">
		INSERT INTO "BOARD_LIKE"
		VALUES(#{memberNo} , #{boardNo})	
	</insert>

	<!-- 게시글 좋아요 수 조회 -->
	<select id="selectLikeCount">
		SELECT COUNT(*) FROM "BOARD_LIKE"
		WHERE BOARD_NO = #{boardNo}
	</select>

	<!-- 조회수 1 증가 -->
	<update id="updateReadCount">
		UPDATE "BOARD" SET
		READ_COUNT = READ_COUNT +1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 조회수 조회 -->
	<select id="selectReadCount">
		SELECT READ_COUNT
		FROM "BOARD"
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	<!-- 검색 조건이 맞는 게시글 수 조회 -->
	<select id="getSearchCount">
		SELECT COUNT(*)
		FROM "BOARD"
		
		<!-- 작성자 검색인 경우 -->
		<if test='key == "w"'>
			JOIN "MEMBER" USING(MEMBER_NO)
		</if>
		
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		
		<choose>
			<!-- 제목 검색 (key 값이 "t"인 경우) -->
			<when test='key == "t"' >
				AND BOARD_TITLE LIKE '%'||#{query}||'%'
			</when>
			
			<!-- 내용 검색 (key 값이 "c"인 경우) -->
			<when test='key == "c"' >
				AND BOARD_CONTENT LIKE '%'||#{query}||'%'
			</when>	
			
			<!-- 내용+내용 검색 (key 값이 "tc"인 경우) -->
			<when test='key == "tc"' >
				AND ( BOARD_TITLE LIKE '%'||#{query}||'%' OR BOARD_CONTENT LIKE '%'||#{query}||'%' )
			</when>
			
			<!-- 내용 검색 (key 값이 "w"인 경우) -->
			<otherwise>
				AND MEMBER_NICKNAME LIKE '%'||#{query}||'%'
			</otherwise>				
		</choose>
	</select>
	
	
	<!-- 
	동적 SQL : <choose> , <when>, <otherwise>
	
	- <choose> : 조건문을 작성할 영역 지정, 내부에 <when>, <otherwise> 태그 작성 가능
	
	- <when> : if, else, if 역할의 태그, test 속성 : 조건식을 작성하는 속성
	
	- <otherwise> : else 역할의 태그
	
	
	 -->
	<!-- 검색 결과 목록 조회 -->
	<select id="selectSearchList">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,
		
		(SELECT
		COUNT(*)
		FROM "COMMENT" C
		WHERE C.BOARD_NO = B.BOARD_NO  
		AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,

		(SELECT COUNT(*)
		FROM "BOARD_LIKE" L
		WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
		 
		 <![CDATA[  
		 CASE
			 WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60 
			 THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60)  || '초 전'
			 
			 WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 
			 THEN FLOOR((SYSDATE - BOARD_WRITE_DATE)* 24 * 60) || '분 전'
			 
			 WHEN SYSDATE - BOARD_WRITE_DATE < 1
			 THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'
			 
			 ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
		 	
		 END BOARD_WRITE_DATE
		 ]]>

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		
		<choose>
			<!-- 제목 검색 (key 값이 "t" 인 경우) -->
			<when test='key == "t"'>
				AND BOARD_TITLE LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 내용 검색 (key 값이 "c" 인 경우) -->
			<when test='key == "c"'>
				AND BOARD_CONTENT LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 제목 + 내용 검색 (key 값이 "tc" 인 경우) -->
			<when test='key == "tc"'>
				AND ( 
					BOARD_TITLE   LIKE '%' || #{query} || '%'
					OR  
					BOARD_CONTENT LIKE '%' || #{query} || '%'
				)
			</when>
			
			<!-- 작성자 검색 (key 값이 "w" 인 경우) -->
			<otherwise>
				AND MEMBER_NICKNAME LIKE '%' || #{query} || '%'
			</otherwise>
			
		</choose>
		
		ORDER BY BOARD_NO DESC
	
	
	</select>
	
	
	
</mapper>



