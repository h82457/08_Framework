<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- <mapper namespace="Mapper 인터페이스 경로 작성(필수로 작성!!)"> -->
<mapper namespace="edu.kh.todo.model.mapper.TodoMapper">

<!-- ! 아래 태그는 mapper.xml 파일 생성시 바로 삭제 ! -->
<!--   <cache-ref namespace=""/> -->
  
  
  <!-- <select> 태그 속성 
  
  		- id 속성 : 태그를 식별하는 값 (연결된 Mapper 메서드명과 동일하게 작성해서 연결)
 		- resultType (결과의 자료형) : 조회 결과 한 줄(1행)을 저장해 반환 할 변수/객체 자료형을 지정
								+ 조회 결과과 여러행이면 행 별로 변수/객체 자료형으로 저장후 모아서 List로 반환
 		
 		(필드명 == 컬럼명인 경우 조회 결과과 자동으로 필드 세팅)
 		(필드명과 컬럼명이 같아지는 속성을 mybatis-config.xml에 작성)
  -->
   	
 	<!-- 
		mapper에서 java data(파라미터)를 SQL에 삽입하는 방법
		
		1) #{변수명 | 필드명} : SQL에 삽입 시 양쪽에 '' 붙여서 삽입
		
		ex) MEMBER_EMAIL = #{memberEmail}
							-> 'member01@naver.com'
		
		=================================================================
		
		2) ${변수명 | 필드명} : SQL에 삽입 시 양쪽에 '' 붙이지 않고 삽입
		
		ex) MEMBER_EMAIL = ${memberEmail}
							-> member01@naver.com  (오류 발생)
							
		??? ${} 언제 사용할까 ???
		1) 삽입할 값이 숫자인 경우 (숫자 리터럴은 '' 없음)
		
		2) SQL문 자체가 변해야 하는 경우에 사용
		
		ex) SELECT MEMBER_NICKNAME, ${key} FROM "MEMBER"
		
		- ${key} == ENROLL_DATE 인 경우
		SELECT MEMBER_NICKNAME, ENROLL_DATE FROM "MEMBER"
		
		- ${key} == MEMBER_ADDRESS 인 경우
		SELECT MEMBER_NICKNAME, MEMBER_ADDRESS FROM "MEMBER"
	 -->
	 
  	
  	
  
  <!-- edu.kh.todo.model.mapper.TodoMapper 인터페이스의 selectAll 메서드와 연결 -->
  <!-- 	ㄴ> selectAll() 메서드 호출시 연결된 SQL 실행 (같은 이름으로 연결, 연결된 메서드가 실행) -->
  
  <select id="selectAll" resultType="edu.kh.todo.model.dto.Todo">
	SELECT TODO_NO, TODO_TITLE, COMPLETE,
		TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') REG_DATE 
	FROM TB_TODO
	ORDER BY TODO_NO  	
  </select>
  
  	<!-- 완료된 할 일 개수 조회 -->
  	<select id="getCompleteCount" resultType="_int">
  		SELECT COUNT(*) 
		FROM TB_TODO
		WHERE COMPLETE = 'Y'
  	</select>
  	
  	<!-- parameterType : 전달 받은 값(전달 인자) 타입을 명시
  			DTO, Map인 경우 필드명/Key 입력해서 하나씩 꺼낼 수 있음
  	 -->
  	
  	<!-- 할 일 추가 -->
  	<insert id="addTodo" parameterType="edu.kh.todo.model.dto.Todo">
  		INSERT INTO TB_TODO
		VALUES(SEQ_TODO_NO.NEXTVAL, #{todoTitle}, #{todoContent}, DEFAULT, DEFAULT)
  	</insert>
  	
  
</mapper>
